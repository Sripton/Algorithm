// Быстрая сортировка (quicksort) — это эффективный алгоритм сортировки, который работает по принципу 
// "разделяй и властвуй". Алгоритм выбирает элемент, называемый "опорным", и сортирует список так, 
// что элементы меньше опорного, располагаются перед ним, а больше или равные — после. 
// Этот процесс повторяется для подсписков, образованных элементами до и после опорного.

function quickSort(arr, left = 0, right = arr.length - 1) {
    let len = arr.length, 
        index;
    
    if(len > 1) {
        index = partition(arr, left, right);
        
        if(left < index - 1) {
            quickSort(arr, left, index - 1);
        } 
        
        if(index < right) {
            quickSort(arr, index, right);
        }
    }
    
    return arr;
}
function partition(arr, left, right) {
    let middle = Math.floor((right + left) / 2),
        pivot = arr[middle],
        i = left,                 
        j = right;               
   
    while(i <= j) {
        while(arr[i] < pivot) {
            i++;
        }
        
        while(arr[j] > pivot) {
            j--;
        }
        
        if(i <= j) {
            [arr[i], arr[j]] = [arr[j], arr[i]]; 
            i++;
            j--;
        }
    }
    return i;
}
// использование функции
let arr = [64, 34, 25, 12, 22, 11, 90];
arr = quickSort(arr);
console.log(arr);

// В этом коде функция quickSort разбивает исходный массив и вызывает себя рекурсивно для двух подмассивов,
//  образованных делением. Деление осуществляется с помощью функции partition, 
// которая выбирает опорный элемент и сортирует массив так, чтобы элементы меньше опорного были слева, 
// а больше или равные - справа. После каждого разделения процесс повторяется для обоих подмассивов. 
// Это продолжается до тех пор, пока размер подмассива не станет равным 1.